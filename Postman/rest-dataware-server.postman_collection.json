{
	"info": {
		"_postman_id": "dc77c618-c3ff-4afe-9b71-4be0232310a7",
		"name": "rest-dataware-server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Default",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "78bd04c1-59fa-40d7-a982-c342123bc57e",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/",
					"host": [
						"{{url}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Eco",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5874cc85-8a9e-46be-94e6-c564a3b1ce2e",
						"exec": [
							"tests[\"status é igual a 200\"] = responseCode.code === 200;\r",
							"\r",
							"try { \r",
							"    responseJSON = JSON.parse(responseBody); \r",
							"    tests['resposta é um JSON válido'] = true;\r",
							"}\r",
							"catch (e) { \r",
							"    responseJSON = {}; \r",
							"    tests['resposta não é um JSON válido'] = false;\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/Eco?value=Gleryston Matos",
					"host": [
						"{{url}}"
					],
					"path": [
						"Eco"
					],
					"query": [
						{
							"key": "value",
							"value": "Gleryston Matos"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Soma",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c3ae2701-f30b-4478-a64c-18bfab186304",
						"exec": [
							"tests[\"status é igual a 200\"] = responseCode.code === 200;\r",
							"\r",
							"try { \r",
							"    responseJSON = JSON.parse(responseBody); \r",
							"    tests['resposta é um JSON válido'] = true;\r",
							"}\r",
							"catch (e) { \r",
							"    responseJSON = {}; \r",
							"    tests['resposta não é um JSON válido'] = false;\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/Soma?value01=10&value02=20",
					"host": [
						"{{url}}"
					],
					"path": [
						"Soma"
					],
					"query": [
						{
							"key": "value01",
							"value": "10"
						},
						{
							"key": "value02",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9c8303fb-23d9-486d-8b37-1260126d63dc",
						"exec": [
							"tests[\"status é igual a 200\"] = responseCode.code === 200;\r",
							"\r",
							"try { \r",
							"    responseJSON = JSON.parse(responseBody); \r",
							"    tests['resposta é um JSON válido'] = true;\r",
							"}\r",
							"catch (e) { \r",
							"    responseJSON = {}; \r",
							"    tests['resposta não é um JSON válido'] = false;\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/Usuario",
					"host": [
						"{{url}}"
					],
					"path": [
						"Usuario"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2d8a7f1e-25d5-4106-bcd0-5e6b91eb9d44",
						"exec": [
							"tests[\"status é igual a 200\"] = responseCode.code === 200;\r",
							"\r",
							"try { \r",
							"    responseJSON = JSON.parse(responseBody); \r",
							"    tests['resposta é um JSON válido'] = true;\r",
							"}\r",
							"catch (e) { \r",
							"    responseJSON = {}; \r",
							"    tests['resposta não é um JSON válido'] = false;\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nome\": \"Gleryston\",\r\n    \"senha\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/Usuario",
					"host": [
						"{{url}}"
					],
					"path": [
						"Usuario"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "92d3540c-515a-4454-a1f2-26106e981ee1",
						"exec": [
							"tests[\"status é igual a 200\"] = responseCode.code === 200;\r",
							"\r",
							"try { \r",
							"    responseJSON = JSON.parse(responseBody); \r",
							"    tests['resposta é um JSON válido'] = true;\r",
							"}\r",
							"catch (e) { \r",
							"    responseJSON = {}; \r",
							"    tests['resposta não é um JSON válido'] = false;\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nome\": \"Gleryston\",\r\n    \"senha\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/Usuario",
					"host": [
						"{{url}}"
					],
					"path": [
						"Usuario"
					]
				}
			},
			"response": []
		},
		{
			"name": "Usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "443fa0eb-b3b8-4634-8e6b-c9a538ce0d7f",
						"exec": [
							"tests[\"status é igual a 200\"] = responseCode.code === 200;\r",
							"\r",
							"try { \r",
							"    responseJSON = JSON.parse(responseBody); \r",
							"    tests['resposta é um JSON válido'] = true;\r",
							"}\r",
							"catch (e) { \r",
							"    responseJSON = {}; \r",
							"    tests['resposta não é um JSON válido'] = false;\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/Usuario?nome=Gleryston",
					"host": [
						"{{url}}"
					],
					"path": [
						"Usuario"
					],
					"query": [
						{
							"key": "nome",
							"value": "Gleryston"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}